---
title: "Comp R - 101"
author: "Prof. Eric Gorgens - UFVJM | (DEF + PPGCF)"
format:
  revealjs: 
    theme: dark
    navigation-mode: vertical
editor: visual
---

# Boa vindas

O R é moderno, o R é flexível, o R é uma poderosa linguagem, o R é versátil e o R é grátis.

## Juntos iremos

-   Conversar sobre R
-   Entender a base da linguagem
-   Praticar leitura e escrita
-   Discutir análises
-   Apreder muito!

## Linguagem R

-   O R é uma linguagem de alto nível, baseado em linhas de comando.

-   Para que o R compreenda as linhas de comando, é fundamental que o usuário a sintaxe da linguagem.

## Software R

-   Console + Script

-   Input \> R (Memória \[Script + Console\]) \> Output

Exemplo A:

``` r
2 + 3
```

Exemplo B:

``` r
df = read.csv('./dados/arvores.csv')
df$S = df$dap^2 * pi / 40000
write.csv(df, './dados/arvores_areaSeccional.csv')
```

# Objetos

Em uma linguagem de programação, um objeto é uma entidade que representa algo do mundo real ou abstrato.

Objetos são usados para representar entidades do mundo real de forma mais natural e intuitiva. Eles também permitem que os programadores reaproveitem código e criem programas mais flexíveis e robustos.

## Partes de um objeto

Um objeto é composto por duas partes principais:

-   **Atributos:** Representam as características do objeto, como sua cor, tamanho, peso, etc.

-   **Comportamentos:** Representam as ações que o objeto pode realizar, como mover, falar, etc.

## Variável

Uma variável é criada a partir de uma atribuição. Atribuir significa fazer com que uma variável receba um objeto qualquer, e passe a armazenar este objeto na memória do computador.

```{r echo=TRUE}
a = 2
df = read.csv('./dados/arvores.csv')
professor = 'eric'
```

## Memória temporária

Mas onde estão as variáveis que acabei de criar?

```{r echo=TRUE}
ls()
print(professor)
```

## Vetor

```{r echo=TRUE}
b = 6
print(b)

idade = c(2, 4, 3)
print(idade)
length(idade)
```

## Matriz

```{r echo=TRUE}

m1 = matrix(c(2, 4, 3, 1, 5, 7), nrow = 2, ncol = 3, byrow = TRUE)
print(m1)
dim(m1)
```

## Dataframe

```{r echo=TRUE}

arvores = read.csv('./dados/arvores.csv')
head(arvores)
tail(arvores)
```

## Mais operadores de dataframe()

```{r echo=TRUE}

names(arvores)

dim(arvores)
```

## Mais operadores de dataframe()

```{r echo=TRUE}

summary(arvores)
```

## Lista

```{r echo=TRUE}

minhaLista = list(arvores, b, idade)

length(minhaLista)
str(minhaLista)
```

## Raster

``` r
srtm = raster('./dados/srtm.tif')
plot(srtm)
```

Ops...

```         
Error in raster("./dados/srtm.tif") : could not find function "raster"
```

O que deu errado?

## Raster

```{r echo=TRUE}

require(raster)
srtm = raster('./dados/srtm.tif')
plot(srtm)
```

# Gráficos básicos

Aprenda a SEMPRE, pensar de modo gráfico!

## Histograma

O histograma representa a distribuição de frequências ao longo da amplitude de ocorrência das observações.

## Histograma

```{r echo=TRUE}

hist(arvores$alt)

```


## Dispersão

Os gráficos de dispersão são representações de duas ou mais variáveis em um gráfico de pontos, no qual uma variável está disposta em função da outra.

## Dispersão

```{r echo=TRUE}

plot(alt ~ dap, data = arvores) 

```


## Dispersão

```{r echo=TRUE}

plot(alt ~ dap, data = arvores)
abline(lm(alt ~ dap, data = arvores))

```


## Boxplot

O boxplot ou diagrama de caixa é uma representação para explorar um conjunto de dados organizados em fatores.

## Boxplot

```{r echo=TRUE}
boxplot(alt~vert, data = arvores)
```

# Exemplos

## Análise de experimento

```{r echo=TRUE}

require(ExpDes.pt)
dbc1 = read.csv('./dados/dbc1.csv')
# dbc(trat, bloco, resp, quali = TRUE, mcomp = "tukey", sigT = 0.05, sigF = 0.05)
dbc(dbc1$desbaste, dbc1$bloco, dbc1$diametro, hvar='han')

```

## Testes de hipótese

```{r echo=TRUE}
require(Hmisc)
rcorr(arvores$dap, arvores$alt)

```

## Testes de hipótese

```{r echo=TRUE}

shapiro.test(arvores$dap)

```

## Testes de hipótese

```{r echo=TRUE}

kruskal.test(dap~vert, data = arvores)

```

## Testes de hipótese

```{r echo=TRUE}

grupoE = subset(arvores$dap, arvores$vert == "E")
grupoC = subset(arvores$dap, arvores$vert == "C")
t.test(grupoE, grupoC)

```

## Testes de hipótese

```{r echo=TRUE}

reg = lm(alt~dap, data = arvores)
summary(reg)

```

## Análises espaciais

```{r echo=TRUE}

require(raster)
srtm = raster('./dados/srtm.tif')
slope = terrain(srtm, opt="slope", unit="degrees", neighbors=8)

plot(slope)
```

## Criando funções

```{r echo=TRUE}

dap = 23
b0 = -0.068854
b1 = 0.000841
vol = b0 + b1 * dap^2

print(vol)

```

## Criando funções

```{r echo=TRUE}

volume = function(dap, b0 = -0.068854, b1 = 0.000841){
  return(b0 + b1 * dap^2)  
}

volume(15)
volume(15, -0.05, 0.001)
```

# Agradecimento

Gustavo, em nome de quem agradeço ao CA da Eng. Florestal da UDESC.

Agradeço à UFVJM, FAPEMIG, CNPq e Capes.